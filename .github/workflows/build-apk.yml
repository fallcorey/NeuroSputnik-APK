name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🏗️ Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🔧 Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: 📦 Create Project Structure
      run: |
        mkdir -p android/app/src/main/assets
        mkdir -p android/app/src/main/java/com/neurosputnik
        mkdir -p android/app/src/main/res/values
        mkdir -p android/app/src/main/res/mipmap-hdpi
        mkdir -p android/app/src/main/res/mipmap-mdpi
        mkdir -p android/app/src/main/res/mipmap-xhdpi
        mkdir -p android/app/src/main/res/mipmap-xxhdpi
        mkdir -p android/app/src/main/res/mipmap-xxxhdpi
        mkdir -p android/gradle/wrapper
        
    - name: 🎨 Create Android Files
      run: |
        cat > android/app/src/main/java/com/neurosputnik/MainActivity.java << 'EOF'
        package com.neurosputnik;
        
        import android.os.Bundle;
        import android.webkit.WebView;
        import android.webkit.WebViewClient;
        import android.webkit.WebSettings;
        import androidx.appcompat.app.AppCompatActivity;
        
        public class MainActivity extends AppCompatActivity {
            private WebView webView;
            
            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                
                webView = new WebView(this);
                WebSettings webSettings = webView.getSettings();
                webSettings.setJavaScriptEnabled(true);
                webSettings.setDomStorageEnabled(true);
                webSettings.setDatabaseEnabled(true);
                webSettings.setAllowFileAccess(true);
                webSettings.setAllowContentAccess(true);
                webSettings.setAllowUniversalAccessFromFileURLs(true);
                webSettings.setAllowFileAccessFromFileURLs(true);
                
                webView.setWebViewClient(new WebViewClient() {
                    @Override
                    public boolean shouldOverrideUrlLoading(WebView view, String url) {
                        view.loadUrl(url);
                        return true;
                    }
                });
                
                webView.loadUrl("file:///android_asset/index.html");
                setContentView(webView);
            }
            
            @Override
            public void onBackPressed() {
                if (webView.canGoBack()) {
                    webView.goBack();
                } else {
                    super.onBackPressed();
                }
            }
        }
        EOF
        
        cat > android/app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android"
            package="com.neurosputnik">
            
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
            <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
            
            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="NeuroSputnik"
                android:theme="@style/AppTheme"
                android:usesCleartextTraffic="true">
                
                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:launchMode="singleTop"
                    android:configChanges="orientation|screenSize"
                    android:windowSoftInputMode="adjustResize">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
        cat > android/app/src/main/res/values/strings.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <string name="app_name">NeuroSputnik</string>
        </resources>
        EOF
        
        cat > android/app/src/main/res/values/styles.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
                <item name="colorPrimary">#667eea</item>
                <item name="colorPrimaryDark">#764ba2</item>
                <item name="colorAccent">#4ECDC4</item>
            </style>
        </resources>
        EOF
        
    - name: 📱 Create Web App
      run: |
        cp index.html android/app/src/main/assets/
        
    - name: 🛠️ Create Build Files
      run: |
        cat > android/build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:7.4.2'
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF
        
        cat > android/app/build.gradle << 'EOF'
        apply plugin: 'com.android.application'
        
        android {
            compileSdk 33
            buildToolsVersion "33.0.0"
            
            defaultConfig {
                applicationId "com.neurosputnik"
                minSdk 21
                targetSdk 33
                versionCode 1
                versionName "1.0"
            }
            
            signingConfigs {
                debug {
                    storeFile file('debug.keystore')
                    storePassword 'android'
                    keyAlias 'androiddebugkey'
                    keyPassword 'android'
                }
            }
            
            buildTypes {
                debug {
                    signingConfig signingConfigs.debug
                    debuggable true
                }
                release {
                    signingConfig signingConfigs.debug
                    minifyEnabled true
                    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }
        
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'androidx.webkit:webkit:1.7.0'
            implementation 'com.google.android.material:material:1.9.0'
        }
        EOF
        
        cat > android/gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-7.5-all.zip
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper.dists
        EOF
        
        cat > android/gradlew << 'EOF'
        #!/bin/sh
        echo "Using system gradle wrapper"
        exec gradle "$@"
        EOF
        chmod +x android/gradlew
        
    - name: 🔑 Create Debug Keystore
      run: |
        cd android/app
        keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
        
    - name: 🏗️ Build APK
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon
        
    - name: 📦 Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: neurospuntik-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: ✅ Success Message
      run: |
        echo "🎉 APK успешно собран!"
        echo "📱 Файл: app-debug.apk"
        echo "📦 Размер: $(du -h android/app/build/outputs/apk/debug/app-debug.apk | cut -f1)"
